{"version":3,"file":"static/js/828.6b5ef869.chunk.js","mappings":"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","sources":["../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/@ledgerhq/logs/src/index.ts","../node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/lru-cache/index.js","../node_modules/semver/classes/comparator.js","../node_modules/semver/classes/range.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/parse.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/satisfies.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/valid.js","../node_modules/semver/index.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/re.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/outside.js","../node_modules/semver/ranges/simplify.js","../node_modules/semver/ranges/subset.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/valid.js","../node_modules/yallist/iterator.js","../node_modules/yallist/yallist.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n"],"names":["asUInt16BE","value","b","Buffer","alloc","writeUInt16BE","initialAcc","data","dataLength","sequence","exports","channel","packetSize","makeBlocks","apdu","concat","length","blockSize","nbBlocks","Math","ceil","fill","blocks","i","head","writeUInt8","chunk","slice","push","reduceResponse","acc","readUInt16BE","errors_1","readUInt8","chunkData","getReducedResult","DeviceModelId","devices","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","_a","nanoS","firmwareVersion","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","devicesList","Object","values","identifyUSBProductId","usbProductId","legacy","find","d","mm","bluetoothServices","serviceUuidToInfos","deviceModel","spec","replace","__assign","subscribers","log","type","message","obj","String","date","Date","e","console","error","dispatch","window","__ledgerLogsListen","cb","indexOf","pop","ledgerDevices","vendorId","isSupported","Promise","resolve","navigator","hid","getHID","TransportError","requestLedgerDevices","requestDevice","filters","device","Array","isArray","getLedgerDevices","getDevices","filter","_super","_this","floor","random","inputs","shift","success","inputCallback","buffer","from","_disconnectEmitted","emit","this","exchangeAtomicImpl","toString","framing","hidFraming","sendReport","_b","result","read","includes","_emitDisconnect","DisconnectedDeviceDuringOperation","productId","undefined","addEventListener","onInputReport","__extends","TransportWebHID","open","transport","onDisconnect","removeEventListener","DisconnectedDevice","exchangeBusyPromise","close","observer","unsubscribed","existingDevices","getFirstLedgerDevice","then","next","descriptor","complete","TransportOpenUserCancelled","unsubscribe","Transport","Yallist","require","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","get","self","key","doUse","node","hit","isStale","del","now","unshiftNode","maxAge","diff","trim","walker","tail","prev","delete","removeNode","Entry","constructor","forEachStep","fn","thisp","call","module","options","max","TypeError","Infinity","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","forEach","itemCount","rforEach","keys","toArray","map","k","Map","dump","v","h","dumpLru","set","len","has","item","unshift","peek","load","arr","l","expiresAt","prune","ANY","Comparator","comp","parseOptions","loose","debug","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","SemVer","test","er","cmp","intersects","includePrerelease","Range","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","raw","format","split","parseRange","c","first","isNullSet","isAny","comps","join","memoKey","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","rangeList","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","parseComparator","replaceGTE0","rangeMap","comparators","size","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","compare","other","compareMain","comparePre","a","compareBuild","inc","release","identifier","isNaN","Error","s","eq","neq","gt","gte","lt","lte","op","rtl","COERCERTL","exec","index","lastIndex","COERCE","versionA","versionB","version1","version2","v1","v2","hasPre","prefix","defaultResult","parsed","list","sort","internalRe","src","tokens","SEMVER_SPEC_VERSION","rcompareIdentifiers","valid","clean","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","Number","MAX_SAFE_COMPONENT_LENGTH","process","NODE_DEBUG","args","numeric","anum","bnum","opts","reduce","o","R","createToken","name","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","ranges","simplified","original","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","prototype","iterator","arguments","insert","inserted","Node","create","pushNode","res","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","reverse"],"sourceRoot":""}