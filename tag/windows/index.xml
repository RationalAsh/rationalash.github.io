<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>windows | Ashwin Narayan</title><link>https://www.ashwinnarayan.com/tag/windows/</link><atom:link href="https://www.ashwinnarayan.com/tag/windows/index.xml" rel="self" type="application/rss+xml"/><description>windows</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2020 Ashwin Narayan</copyright><lastBuildDate>Sun, 31 Dec 2017 11:41:31 +0530</lastBuildDate><image><url>https://www.ashwinnarayan.com/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>windows</title><link>https://www.ashwinnarayan.com/tag/windows/</link></image><item><title>Hugo Web Development Workflow on Windows</title><link>https://www.ashwinnarayan.com/post/hugo-windows-workflow/</link><pubDate>Sun, 31 Dec 2017 11:41:31 +0530</pubDate><guid>https://www.ashwinnarayan.com/post/hugo-windows-workflow/</guid><description>&lt;p>As I mentioned in
&lt;a href="https://www.ashwinnarayan.com/post/welcome/">my first article on this blog&lt;/a>, I&amp;rsquo;m now using
&lt;a href="https://gohugo.io/" target="_blank" rel="noopener">Hugo&lt;/a>, the static site generator to build my personal website. Due to the needs of my work environment (mostly because I need to use MS Word and certain MATLAB features on a regular basis), I&amp;rsquo;ve been primarily using Windows as my operating system for the past year or so. Having used Linux for a long time, I definitely missed the conveniences offered by shell scripting and other command line tools. However, while setting up a workflow in Windows for publishing content to my website I discovered that Windows&amp;rsquo; scripting tools are not all that bad. In fact, for anyone familiar with scripting from Linux, moving to Powershell isn&amp;rsquo;t that hard.&lt;/p>
&lt;h2 id="workflow">Workflow&lt;/h2>
&lt;p>A typical Hugo website development folder looks like this:
&lt;img src="https://www.ashwinnarayan.com/img/hugo_folders.jpg" alt="Folder Structure">&lt;/p>
&lt;p>I add new posts by creating new markown (.md) files in the &lt;code>post&lt;/code> folder. When the website is compiled using the &lt;code>hugo&lt;/code> command, the static website&amp;rsquo;s code is generated into the &lt;code>public&lt;/code> folder. The content inside this is what goes into the folder that is served by any webserver. Since I am hosting the website on Github Pages, I found it most convenient to set up a separate folder with a clone of the &lt;code>username.githug.io&lt;/code> repository. After article writing/editing is done, I can generate the website and copy the contents inside the &lt;code>public&lt;/code> folder to the repository folder to publish.&lt;/p>
&lt;p>When I am editing an article, I can preview content locally by using the &lt;code>hugo server --watch&lt;/code> command in the top level directory. This sets up a local webserver on &lt;code>localhost:1313&lt;/code> so that you can preview the website.&lt;/p>
&lt;p>To publish my website to Github pages after I&amp;rsquo;m done with development, I copy everything inside the &lt;code>public&lt;/code> folder into my local copy of the github repository and then commit all and push.&lt;/p>
&lt;h2 id="batch-script-automation">Batch Script Automation&lt;/h2>
&lt;p>Most of the the steps in the workflow can be automated away using batch scripts to save large amounts of time. I mean, who wants to spend time manually copying files and commiting after every small edit to the website? The &lt;code>build_on_laptop.bat&lt;/code> file in the top level directory handles everything. Diving into the source, I first delete everything inside the &lt;code>public&lt;/code> folder (Hugo does not automatically do this) and build a fresh version of the website.&lt;/p>
&lt;pre>&lt;code class="language-dos">rmdir /S /Q public
hugo
&lt;/code>&lt;/pre>
&lt;p>My Github pages repo has a few files that are not generated by Hugo. So I can&amp;rsquo;t just nuke the folder and delete everything. So I have a set of commands that delete all the Hugo generated files in the repository folder:&lt;/p>
&lt;pre>&lt;code class="language-dos">rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\categories&amp;quot;
rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\css&amp;quot;
rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\fonts&amp;quot;
rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\home&amp;quot;
rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\img&amp;quot;
rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\js&amp;quot;
rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\post&amp;quot;
rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\project&amp;quot;
rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\publication&amp;quot;
rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\publication_types&amp;quot;
rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\tags&amp;quot;
rmdir /S /Q &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\talk&amp;quot;
del &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\404.html&amp;quot;
del &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\index.html&amp;quot;
del &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\index.xml&amp;quot;
del &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\sitemap.xml&amp;quot;
del &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\site.webmanifest&amp;quot;
del &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io\styles.css&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>Then comes the task of copying your updated website source into the folder. While it&amp;rsquo;s possible to use the &lt;code>cp&lt;/code> command, I found that the &lt;code>robocopy&lt;/code>
&lt;a href="https://technet.microsoft.com/en-us/library/cc733145.aspx?f=255&amp;amp;MSPPError=-2147217396" target="_blank" rel="noopener">command&lt;/a> is in general much better for copying files around in Windows.&lt;/p>
&lt;pre>&lt;code class="language-dos">robocopy public &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io&amp;quot; /E
&lt;/code>&lt;/pre>
&lt;p>Finally, I need to commit the new version of the website and push to github. This is also easily done:&lt;/p>
&lt;pre>&lt;code class="language-dos">cd &amp;quot;C:\Users\Ashwin Narayan\rationalash.github.io&amp;quot;
set /p commitmsg=&amp;quot;Enter a commit message: &amp;quot;
git add --all .
git commit -m &amp;quot;%commitmsg%&amp;quot;
git push origin master
&lt;/code>&lt;/pre>
&lt;p>So the end result is that when I run this script, it automatically deletes everything in the public folder and the repository folder, rebuilds and copies the new website over and then commits and pushes the new version to github to deploy the website.&lt;/p>
&lt;h2 id="even-more-automation-with-visual-studio-code">Even More Automation with Visual Studio Code&lt;/h2>
&lt;p>I can shave even more time off the workflow by using Visual Studio Code. VS Code has a really well made task management system. It&amp;rsquo;s also a natural choice since I do most of my markdown editing inside VS Code anyway. VS Code has a &lt;code>tasks.json&lt;/code> file where you can bind custom tasks/commands to key combinations. In this case, I just bound the default build task mapped to &lt;code>Ctrl&lt;/code>+&lt;code>Alt&lt;/code>+&lt;code>B&lt;/code> to the batch script. I also created a compose task which creates the local preview webserver.&lt;/p>
&lt;pre>&lt;code class="language-json">{
// See https://go.microsoft.com/fwlink/?LinkId=733558
// for the documentation about the tasks.json format
&amp;quot;version&amp;quot;: &amp;quot;0.1.0&amp;quot;,
&amp;quot;tasks&amp;quot;: [
{
&amp;quot;taskName&amp;quot;: &amp;quot;build&amp;quot;,
&amp;quot;command&amp;quot;: &amp;quot;build_on_laptop.bat&amp;quot;,
&amp;quot;isShellCommand&amp;quot;: true,
&amp;quot;showOutput&amp;quot;: &amp;quot;always&amp;quot;,
&amp;quot;echoCommand&amp;quot;: true
},
{
&amp;quot;taskName&amp;quot;: &amp;quot;compose&amp;quot;,
&amp;quot;command&amp;quot;: &amp;quot;hugo&amp;quot;,
&amp;quot;args&amp;quot;: [&amp;quot;server&amp;quot;, &amp;quot;--watch&amp;quot;],
&amp;quot;isShellCommand&amp;quot;: true,
&amp;quot;showOutput&amp;quot;: &amp;quot;always&amp;quot;,
&amp;quot;echoCommand&amp;quot;: true
}
]
}
&lt;/code>&lt;/pre>
&lt;p>With most of the steps automated, writing and publishing new articles don&amp;rsquo;t take that long compared to off the shelf solutions like Wordpress or Medium. It also comes with the advantage that you have full control over the website&amp;rsquo;s source code.&lt;/p></description></item></channel></rss>